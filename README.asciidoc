make apt sane
=============

--------------------------------------
echo 'APT::Install-Recommends "0";' > /etc/apt/apt.conf.d/99norecommends
--------------------------------------


lvm
===

* create a partition with partition type 8E (linux lvm)
* +apt-get install lvm2+
* Add new volumegroup +vgcreate vg0 /dev/sda6+

libvirt + kvm
=============

* +apt-get install libvirt-bin virt-top qemu-kvm debootstrap dbus virtinst netcat-openbsd bridge-utils+

* remove all additional ips from /e/n/i

./etc/network/interface
-------------------------------------
auto eth0
iface eth0 inet manual

auto br0
iface br0 inet static
  address 83.246.69.170
  netmask 255.255.255.248
  broadcast 83.246.69.175
  gateway 83.246.69.169
  bridge_ports eth0
  bridge_fd 9
  bridge_hello 2
  bridge_maxage 12
  bridge_stp off
-------------------------------------

LDAP
====

* +apt-get install slapd ldapvi+
* Remove old ldap db: +rm /var/lib/ldap/*(db*|bdb|log*|alock)+
* Remove slapd.d madness: +rm -rf /etc/ldap/slapd.d+

./etc/ldap/slapd.conf
------------------------------------
# This is the main slapd configuration file. See slapd.conf(5) for more
# info on the configuration options.

#######################################################################
# Global Directives:

# Features to permit
#allow bind_v2

# Schema and objectClass definitions
include         /etc/ldap/schema/core.schema
include         /etc/ldap/schema/cosine.schema
include         /etc/ldap/schema/nis.schema
include         /etc/ldap/schema/inetorgperson.schema


# Where the pid file is put. The init.d script
# will not stop the server if you change this.
pidfile         /var/run/slapd/slapd.pid

# List of arguments that were passed to the server
argsfile        /var/run/slapd/slapd.args

# Read slapd.conf(5) for possible values
loglevel        0

# Where the dynamically loaded modules are stored
modulepath	/usr/lib/ldap
moduleload	back_bdb

# The maximum number of entries that is returned for a search operation
sizelimit 500

# The tool-threads parameter sets the actual amount of cpu's that is used
# for indexing.
tool-threads 1

#######################################################################
# Specific Backend Directives for bdb:
# Backend specific directives apply to this backend until another
# 'backend' directive occurs
backend		bdb

#######################################################################
# Specific Directives for database #1, of type bdb:
# Database specific directives apply to this databasse until another
# 'database' directive occurs
database        bdb

# The base of your directory in database #1
suffix          "dc=grml,dc=org"
checkpoint 512 30

# rootdn directive for specifying a superuser on the database. This is needed
# for syncrepl.
# rootdn          "cn=admin,dc=snow-crash,dc=org"

# Where the database file are physically stored for database #1
directory       "/var/lib/ldap"

# For the Debian package we use 2MB as default but be sure to update this
# value if you have plenty of RAM
dbconfig set_cachesize 0 2097152 0

# Sven Hartge reported that he had to set this value incredibly high
# to get slapd running at all. See http://bugs.debian.org/303057
# for more information.

# Number of objects that can be locked at the same time.
dbconfig set_lk_max_objects 1500
# Number of locks (both requested and granted)
dbconfig set_lk_max_locks 1500
# Number of lockers
dbconfig set_lk_max_lockers 1500

# Indexing options for database #1
index           objectClass eq

# Save the time that the entry gets modified, for database #1
lastmod         on

# The userPassword by default can be changed
# by the owner
access to attrs=userPassword,shadowLastChange
        by dn="cn=admin,dc=grml,dc=org" write
        by anonymous auth
        by self write
        by * none

# Read access for the base (needed by sasl..)
access to dn.base="" by * read

# The admin dn has full write access, everyone else
# can read everything.
access to *
        by dn="cn=admin,dc=grml,dc=org" write
        by * read

# For Netscape Roaming support, each user gets a roaming
# profile for which they have write access to
#access to dn=".*,ou=Roaming,o=morsnet"
#        by dn="cn=admin,dc=snow-crash,dc=org" write
#        by dnattr=owner write

#######################################################################
# Specific Directives for database #2, of type 'other' (can be bdb too):
# Database specific directives apply to this databasse until another
# 'database' directive occurs
#database        <other>

# The base of your directory for database #2
#suffix		"dc=debian,dc=org"

------------------------------------

.initalize ldap db
-----------------------------------
slapadd -c < EOF

dn: dc=grml,dc=org
objectClass: top
objectClass: dcObject
objectClass: organization
o: grml.org
dc: grml

dn: cn=admin,dc=grml,dc=org
objectClass: simpleSecurityObject
objectClass: organizationalRole
cn: admin
description: LDAP administrator
userPassword: {SSHA}ctYLwzAfESce+Yok3S9f2iW9HGpdakMB

dn: ou=People,dc=grml,dc=org
ou: People
objectClass: top
objectClass: organizationalUnit
structuralObjectClass: organizationalUnit

dn: ou=Group,dc=grml,dc=org
ou: Group
objectClass: top
objectClass: organizationalUnit
structuralObjectClass: organizationalUnit

----------------------------------

* +chown -R openldap:openldap /var/lib/ldap/* /etc/ldap/slapd.conf+
* start slapd

host firewall
=============

* +apt-get install ferm+

.ferm.conf
----------------------------------
table filter {
    chain INPUT {
        policy DROP;

        # connection tracking
        mod state state INVALID DROP;
        mod state state (ESTABLISHED RELATED) ACCEPT;

        # allow local packet
        interface lo ACCEPT;

        # respond to ping
        proto icmp ACCEPT; 

        # allow SSH connections
        proto tcp dport ssh ACCEPT;
    }
    chain OUTPUT {
        policy ACCEPT;

        # connection tracking
        #mod state state INVALID DROP;
        mod state state (ESTABLISHED RELATED) ACCEPT;
    }
    chain FORWARD {
        policy DROP;

        # connection tracking
        mod state state INVALID DROP;
        mod state state (ESTABLISHED RELATED) ACCEPT;
    }
}

domain ip6 {
	table filter {
		chain INPUT {
			policy DROP;

			# connection tracking
			mod state state INVALID DROP;
			mod state state (ESTABLISHED RELATED) ACCEPT;

			policy ACCEPT;

			# respond to ping
			proto icmpv6 ACCEPT;

			# allow SSH connections
			proto tcp dport ssh ACCEPT;


		}

		chain OUTPUT {
			policy ACCEPT;

			# connection tracking
			#mod state state INVALID DROP;
			mod state state (ESTABLISHED RELATED) ACCEPT;
		}
		chain FORWARD {
			policy DROP;

			# connection tracking	
			mod state state INVALID DROP;
			mod state state (ESTABLISHED RELATED) ACCEPT;
		}
	}
}

----------------------------------


collectd
=========

